---
title: "Data Engineer Onboarding Plan"
subtitle: "System Discovery and Documentation Strategy"
date: 2024-01-20
---

# Overview

This document outlines the phased approach for onboarding as a Data Engineer at CoopDIGITy, with a focus on system discovery and documentation in an environment with limited existing documentation.

# Phase 1: System Discovery & Documentation
## Initial Information Gathering

- [ ] Schedule 1:1s with team members to understand their roles and responsibilities
- [ ] Create a shared document to collect tribal knowledge
- [ ] Set up a personal wiki/notebook for documenting discoveries
- [ ] Request access to all relevant systems (even ones you're unsure about)

## System Archaeology

- [ ] List all discoverable databases and data stores
- [ ] Document all found API endpoints and services
- [ ] Map out existing data pipelines (even if incomplete)
- [ ] Create initial system topology diagram
- [ ] Document all environment variables and config files found

## Code Repository Mapping

- [ ] List all repositories you can find
- [ ] For each repository:
    - [ ] Document its apparent purpose
    - [ ] Note active contributors
    - [ ] Document build process if found
    - [ ] Note dependencies and connection points
    - [ ] Document deployment process (if discoverable)

# Phase 2: Active Investigation

## Database Exploration

- [ ] For each database:
    - [ ] Document schema
    - [ ] Note data volumes
    - [ ] Identify critical tables
    - [ ] Document relationships
    - [ ] Note update frequencies
    - [ ] Identify owners/stakeholders

## Pipeline Discovery

- [ ] Trace data flows:
    - [ ] Source systems
    - [ ] Transformation points
    - [ ] Destination systems
- [ ] Document job schedules
- [ ] Note failure points and current monitoring
- [ ] Map dependencies between jobs

## Infrastructure Mapping

- [ ] Document all production servers/instances
- [ ] Map network connectivity
- [ ] Document security groups and access patterns
- [ ] Note backup systems (if they exist)
- [ ] Document monitoring solutions in place

# Phase 3: Documentation Creation

## Basic Documentation

- [ ] Create README files for main repositories
- [ ] Document setup procedures as you discover them
- [ ] Create basic architecture diagrams
- [ ] Document known failure scenarios

## Process Documentation

- [ ] Document deployment process
- [ ] Create troubleshooting guides
- [ ] Document backup/restore procedures (if they exist)
- [ ] Create incident response templates

# Key Questions for Team Members

## Historical Context

1. What are the most problematic areas of the system?
2. Which parts of the system are most critical?
3. What breaks most often?
4. What tribal knowledge hasn't been documented?

## Technical Questions

1. Where are logs stored?
2. How are secrets managed?
3. What's the release process?
4. How is testing done?

# Documentation Templates

## System Component Template

```markdown
# Component Name

## Purpose
[What does this component do?]

## Location
- Repository: 
- Production Location:
- Config Files:

## Dependencies
- Input Dependencies:
- Output Dependencies:
- Service Dependencies:

## Operation
- How to Start:
- How to Stop:
- How to Monitor:
- Common Issues:

## Notes
[Any additional information]
```

## Process Documentation Template

```markdown
# Process Name

## Overview
[Brief description]

## Steps
1. 
2. 
3. 

## Required Access
- System 1
- System 2

## Common Issues
- Issue 1: Solution 1
- Issue 2: Solution 2

## Notes
[Additional context]
```

# Progress Tracking

## Investigation Log Template

```markdown
Date:
System Investigated:
Findings:
Questions:
Follow-up Items:
```

## Meeting Notes Template

```markdown
Date:
Attendees:
Key Insights:
New Systems Discovered:
Action Items:
```

# Priority Documentation Areas

## Critical Systems

- [ ] Production databases
- [ ] ETL processes
- [ ] Data pipelines
- [ ] Backup systems
- [ ] Monitoring systems

## Business Processes

- [ ] Data flow for critical business operations
- [ ] Reporting processes
- [ ] Data quality checks
- [ ] Business rules and transformations

# Documentation Tools and Organization

## Recommended Tools

- Draw.io for architecture diagrams
- Markdown for process documentation
- Git for version control of documentation
- Team wiki (if available)
- Shared team documentation space

## Documentation Organization

- System Architecture
- Data Flows
- Process Documents
- Troubleshooting Guides
- Setup Procedures
- Contact Information